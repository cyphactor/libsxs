FileName: README
Author(s): Andrew De Ponte <cyphactor@gmail.com>

Table of Contents

    1. What Is It? .....................................................
    2. Building ........................................................
    3. Systems Tested On ...............................................
    4. Directory Contents ..............................................

1.  What Is It?

    lib_sxs is a library which provides a cross-platform sockets API. It
    allows a software developer to write an application that will use
    lib_sxs to do all it's network and the networking portion of the
    application will run on Windows, Mac, or Unix. It also provides
    better error handling for use with threaded applications as well as
    providing a number of useful utility functions that are extremely
    beneficial in implementing network protocols.
    
2.  Building

    This project's build sequence is managed by the autotools. Hence,
    the following command sequence can be used to build the project in
    any of the unix varients (include Mac OS-X).
    
    $ ./bootstrap.sh && ./configure && make

    One, may also build a static version of the library by using the
    --enable-static flag and --disable-shared flag when running the
    ./configure script. The following is an example of this.

    $ ./bootstrap.sh && ./configure --disable-shared --enable-static

    However, to build a version for windows system from a Debian Linux
    Etch (testing) box, one needs to first install the mingw32 package
    via the following:

    # apt-get install mingw32

    Once, the mingw32 package is installed one can trivially build
    Windows binaries of the project by using the following command
    sequence:

    $ ./bootstrap.sh && ./configure --host=i586-mingw32msvc && make

    One could also build this on a Windows computer which has cygwin
    installed on it and the necessary autotools, however this is too
    large of a subject to cover in this README. Or, one could even build
    it using Microsoft Visual Studio however this would require
    configure and building a project appropriately to correctly build
    it.

3.  Systems Tested On

    The following systems are all the systems which lib_pmf has been
    successfully run on.

    - Linux Debian Etch (Testing)

4. Directory Contents

    doc - Contains general project documentation
    doc/dox - Contains all the doxygen genarted documentation when one
              runs the doxygen command from the trunk of the project.
    src - Contains all lib_sxs source files.
    scripts - Contains utility scripts used to assist with code
              source code generation.
